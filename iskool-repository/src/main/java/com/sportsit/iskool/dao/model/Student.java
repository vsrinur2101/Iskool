package com.sportsit.iskool.dao.model;
// Generated Aug 24, 2019 6:56:06 PM by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Student generated by hbm2java
 */
@Entity
@Table(name="student"
    ,catalog="iskool"
    , uniqueConstraints = @UniqueConstraint(columnNames="studentid") 
)
public class Student  implements java.io.Serializable {


     private int id;
     private Organization organization;
     private String firstname;
     private String lastname;
     private String email;
     private String studentid;
     private String password;
     private int enabled;
     private int expired;
     private String locked;
     private Date created;
     private String lastupdated;
     private Set sections = new HashSet(0);
     private Set studentSubjectEmployeeMappings = new HashSet(0);
     private Set studentElectivesAcademicyearMappings = new HashSet(0);
     private Set courseStudentMappings = new HashSet(0);
     private Set studentParentMappings = new HashSet(0);
     private Set studentRoleMappings = new HashSet(0);

    public Student() {
    }

	
    public Student(int id, Organization organization, String firstname, String lastname, String email, String studentid, int enabled, int expired, String locked, Date created, String lastupdated) {
        this.id = id;
        this.organization = organization;
        this.firstname = firstname;
        this.lastname = lastname;
        this.email = email;
        this.studentid = studentid;
        this.enabled = enabled;
        this.expired = expired;
        this.locked = locked;
        this.created = created;
        this.lastupdated = lastupdated;
    }
    public Student(int id, Organization organization, String firstname, String lastname, String email, String studentid, String password, int enabled, int expired, String locked, Date created, String lastupdated, Set sections, Set studentSubjectEmployeeMappings, Set studentElectivesAcademicyearMappings, Set courseStudentMappings, Set studentParentMappings, Set studentRoleMappings) {
       this.id = id;
       this.organization = organization;
       this.firstname = firstname;
       this.lastname = lastname;
       this.email = email;
       this.studentid = studentid;
       this.password = password;
       this.enabled = enabled;
       this.expired = expired;
       this.locked = locked;
       this.created = created;
       this.lastupdated = lastupdated;
       this.sections = sections;
       this.studentSubjectEmployeeMappings = studentSubjectEmployeeMappings;
       this.studentElectivesAcademicyearMappings = studentElectivesAcademicyearMappings;
       this.courseStudentMappings = courseStudentMappings;
       this.studentParentMappings = studentParentMappings;
       this.studentRoleMappings = studentRoleMappings;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="organization_id", nullable=false)
    public Organization getOrganization() {
        return this.organization;
    }
    
    public void setOrganization(Organization organization) {
        this.organization = organization;
    }
    
    @Column(name="firstname", nullable=false, length=45)
    public String getFirstname() {
        return this.firstname;
    }
    
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }
    
    @Column(name="lastname", nullable=false, length=45)
    public String getLastname() {
        return this.lastname;
    }
    
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }
    
    @Column(name="email", nullable=false, length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="studentid", unique=true, nullable=false, length=45)
    public String getStudentid() {
        return this.studentid;
    }
    
    public void setStudentid(String studentid) {
        this.studentid = studentid;
    }
    
    @Column(name="password", length=45)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="enabled", nullable=false)
    public int getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(int enabled) {
        this.enabled = enabled;
    }
    
    @Column(name="expired", nullable=false)
    public int getExpired() {
        return this.expired;
    }
    
    public void setExpired(int expired) {
        this.expired = expired;
    }
    
    @Column(name="locked", nullable=false, length=45)
    public String getLocked() {
        return this.locked;
    }
    
    public void setLocked(String locked) {
        this.locked = locked;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }
    
    @Column(name="lastupdated", nullable=false, length=45)
    public String getLastupdated() {
        return this.lastupdated;
    }
    
    public void setLastupdated(String lastupdated) {
        this.lastupdated = lastupdated;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="student")
    public Set getSections() {
        return this.sections;
    }
    
    public void setSections(Set sections) {
        this.sections = sections;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="student")
    public Set getStudentSubjectEmployeeMappings() {
        return this.studentSubjectEmployeeMappings;
    }
    
    public void setStudentSubjectEmployeeMappings(Set studentSubjectEmployeeMappings) {
        this.studentSubjectEmployeeMappings = studentSubjectEmployeeMappings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="student")
    public Set getStudentElectivesAcademicyearMappings() {
        return this.studentElectivesAcademicyearMappings;
    }
    
    public void setStudentElectivesAcademicyearMappings(Set studentElectivesAcademicyearMappings) {
        this.studentElectivesAcademicyearMappings = studentElectivesAcademicyearMappings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="student")
    public Set getCourseStudentMappings() {
        return this.courseStudentMappings;
    }
    
    public void setCourseStudentMappings(Set courseStudentMappings) {
        this.courseStudentMappings = courseStudentMappings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="student")
    public Set getStudentParentMappings() {
        return this.studentParentMappings;
    }
    
    public void setStudentParentMappings(Set studentParentMappings) {
        this.studentParentMappings = studentParentMappings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="student")
    public Set getStudentRoleMappings() {
        return this.studentRoleMappings;
    }
    
    public void setStudentRoleMappings(Set studentRoleMappings) {
        this.studentRoleMappings = studentRoleMappings;
    }




}


