package com.sportsit.iskool.dao.model;
// Generated Aug 24, 2019 6:56:06 PM by Hibernate Tools 3.2.2.GA


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * StudentElectivesAcademicyearMapping generated by hbm2java
 */
@Entity
@Table(name="student_electives_academicyear_mapping"
    ,catalog="iskool"
)
public class StudentElectivesAcademicyearMapping  implements java.io.Serializable {


     private int id;
     private Academicyear academicyear;
     private Subject subject;
     private Employee employee;
     private Student student;

    public StudentElectivesAcademicyearMapping() {
    }

    public StudentElectivesAcademicyearMapping(int id, Academicyear academicyear, Subject subject, Employee employee, Student student) {
       this.id = id;
       this.academicyear = academicyear;
       this.subject = subject;
       this.employee = employee;
       this.student = student;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AcademicYear_id", nullable=false)
    public Academicyear getAcademicyear() {
        return this.academicyear;
    }
    
    public void setAcademicyear(Academicyear academicyear) {
        this.academicyear = academicyear;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Subject_id", nullable=false)
    public Subject getSubject() {
        return this.subject;
    }
    
    public void setSubject(Subject subject) {
        this.subject = subject;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Employee_id", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Student_id", nullable=false)
    public Student getStudent() {
        return this.student;
    }
    
    public void setStudent(Student student) {
        this.student = student;
    }




}


