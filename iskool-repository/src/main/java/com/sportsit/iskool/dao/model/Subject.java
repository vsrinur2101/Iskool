package com.sportsit.iskool.dao.model;
// Generated Aug 24, 2019 6:56:06 PM by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name="subject"
    ,catalog="iskool"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class Subject  implements java.io.Serializable {


     private int id;
     private SubjectType subjectType;
     private String name;
     private String description;
     private Set<StudentElectivesAcademicyearMapping> studentElectivesAcademicyearMappings = new HashSet<StudentElectivesAcademicyearMapping>(0);
     private Set<EmployeeSubjectMapping> employeeSubjectMappings = new HashSet<EmployeeSubjectMapping>(0);
     private Set<CourseSubjectMapping> courseSubjectMappings = new HashSet<CourseSubjectMapping>(0);

    public Subject() {
    }

	
    public Subject(int id, SubjectType subjectType, String name) {
        this.id = id;
        this.subjectType = subjectType;
        this.name = name;
    }
    public Subject(int id, SubjectType subjectType, String name, String description, Set<StudentElectivesAcademicyearMapping> studentElectivesAcademicyearMappings, Set<EmployeeSubjectMapping> employeeSubjectMappings, Set<CourseSubjectMapping> courseSubjectMappings) {
       this.id = id;
       this.subjectType = subjectType;
       this.name = name;
       this.description = description;
       this.studentElectivesAcademicyearMappings = studentElectivesAcademicyearMappings;
       this.employeeSubjectMappings = employeeSubjectMappings;
       this.courseSubjectMappings = courseSubjectMappings;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="subject_type_id", nullable=false)
    public SubjectType getSubjectType() {
        return this.subjectType;
    }
    
    public void setSubjectType(SubjectType subjectType) {
        this.subjectType = subjectType;
    }
    
    @Column(name="name", unique=true, nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="description", length=150)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="subject")
    public Set<StudentElectivesAcademicyearMapping> getStudentElectivesAcademicyearMappings() {
        return this.studentElectivesAcademicyearMappings;
    }
    
    public void setStudentElectivesAcademicyearMappings(Set<StudentElectivesAcademicyearMapping> studentElectivesAcademicyearMappings) {
        this.studentElectivesAcademicyearMappings = studentElectivesAcademicyearMappings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="subject")
    public Set<EmployeeSubjectMapping> getEmployeeSubjectMappings() {
        return this.employeeSubjectMappings;
    }
    
    public void setEmployeeSubjectMappings(Set<EmployeeSubjectMapping> employeeSubjectMappings) {
        this.employeeSubjectMappings = employeeSubjectMappings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="subject")
    public Set<CourseSubjectMapping> getCourseSubjectMappings() {
        return this.courseSubjectMappings;
    }
    
    public void setCourseSubjectMappings(Set<CourseSubjectMapping> courseSubjectMappings) {
        this.courseSubjectMappings = courseSubjectMappings;
    }




}


