package com.sportsit.iskool.dao.model;
// Generated Aug 24, 2019 6:56:06 PM by Hibernate Tools 3.2.2.GA


import java.util.Arrays;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * OauthAccessTokenId generated by hbm2java
 */
@Embeddable
public class OauthAccessTokenId  implements java.io.Serializable {


     private String tokenId;
     private byte[] token;
     private String authenticationId;
     private String userName;
     private String clientId;
     private byte[] authentication;
     private String refreshToken;

    public OauthAccessTokenId() {
    }

    public OauthAccessTokenId(String tokenId, byte[] token, String authenticationId, String userName, String clientId, byte[] authentication, String refreshToken) {
       this.tokenId = tokenId;
       this.token = token;
       this.authenticationId = authenticationId;
       this.userName = userName;
       this.clientId = clientId;
       this.authentication = authentication;
       this.refreshToken = refreshToken;
    }
   

    @Column(name="token_id", length=256)
    public String getTokenId() {
        return this.tokenId;
    }
    
    public void setTokenId(String tokenId) {
        this.tokenId = tokenId;
    }

    @Column(name="token")
    public byte[] getToken() {
        return this.token;
    }
    
    public void setToken(byte[] token) {
        this.token = token;
    }

    @Column(name="authentication_id", length=256)
    public String getAuthenticationId() {
        return this.authenticationId;
    }
    
    public void setAuthenticationId(String authenticationId) {
        this.authenticationId = authenticationId;
    }

    @Column(name="user_name", length=45)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name="client_id", length=256)
    public String getClientId() {
        return this.clientId;
    }
    
    public void setClientId(String clientId) {
        this.clientId = clientId;
    }

    @Column(name="authentication")
    public byte[] getAuthentication() {
        return this.authentication;
    }
    
    public void setAuthentication(byte[] authentication) {
        this.authentication = authentication;
    }

    @Column(name="refresh_token", length=256)
    public String getRefreshToken() {
        return this.refreshToken;
    }
    
    public void setRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof OauthAccessTokenId) ) return false;
		 OauthAccessTokenId castOther = ( OauthAccessTokenId ) other; 
         
		 return ( (this.getTokenId()==castOther.getTokenId()) || ( this.getTokenId()!=null && castOther.getTokenId()!=null && this.getTokenId().equals(castOther.getTokenId()) ) )
 && ( (this.getToken()==castOther.getToken()) || ( this.getToken()!=null && castOther.getToken()!=null && Arrays.equals(this.getToken(), castOther.getToken()) ) )
 && ( (this.getAuthenticationId()==castOther.getAuthenticationId()) || ( this.getAuthenticationId()!=null && castOther.getAuthenticationId()!=null && this.getAuthenticationId().equals(castOther.getAuthenticationId()) ) )
 && ( (this.getUserName()==castOther.getUserName()) || ( this.getUserName()!=null && castOther.getUserName()!=null && this.getUserName().equals(castOther.getUserName()) ) )
 && ( (this.getClientId()==castOther.getClientId()) || ( this.getClientId()!=null && castOther.getClientId()!=null && this.getClientId().equals(castOther.getClientId()) ) )
 && ( (this.getAuthentication()==castOther.getAuthentication()) || ( this.getAuthentication()!=null && castOther.getAuthentication()!=null && Arrays.equals(this.getAuthentication(), castOther.getAuthentication()) ) )
 && ( (this.getRefreshToken()==castOther.getRefreshToken()) || ( this.getRefreshToken()!=null && castOther.getRefreshToken()!=null && this.getRefreshToken().equals(castOther.getRefreshToken()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getTokenId() == null ? 0 : this.getTokenId().hashCode() );
         int tokenHashcode = 0;
         byte[] tokenProperty = this.getToken();
         if(tokenProperty != null) {
             tokenHashcode = 1;
             for (int i=0; i<tokenProperty.length; i++) {
                 tokenHashcode = 37 * tokenHashcode + tokenProperty[i];
             }
         }

         result = 37 * result + tokenHashcode;

         result = 37 * result + ( getAuthenticationId() == null ? 0 : this.getAuthenticationId().hashCode() );
         result = 37 * result + ( getUserName() == null ? 0 : this.getUserName().hashCode() );
         result = 37 * result + ( getClientId() == null ? 0 : this.getClientId().hashCode() );
         int authenticationHashcode = 0;
         byte[] authenticationProperty = this.getAuthentication();
         if(authenticationProperty != null) {
             authenticationHashcode = 1;
             for (int i=0; i<authenticationProperty.length; i++) {
                 authenticationHashcode = 37 * authenticationHashcode + authenticationProperty[i];
             }
         }

         result = 37 * result + authenticationHashcode;

         result = 37 * result + ( getRefreshToken() == null ? 0 : this.getRefreshToken().hashCode() );
         return result;
   }   


}


